{
  "{\"sourceRoot\":\"/Users/pasqualecoretti/Desktop/projects/logger/src/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/pasqualecoretti/Desktop/projects/logger\",\"filename\":\"/Users/pasqualecoretti/Desktop/projects/logger/src/test/helpers_test_.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pasqualecoretti/Desktop/projects/logger\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/pasqualecoretti/Desktop/projects/logger",
      "filename": "/Users/pasqualecoretti/Desktop/projects/logger/src/test/helpers_test_.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/pasqualecoretti/Desktop/projects/logger",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/pasqualecoretti/Desktop/projects/logger/src/test/helpers_test_.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/pasqualecoretti/Desktop/projects/logger/src/test/helpers_test_.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src/test",
        "sourceFileName": "helpers_test_.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _should = _interopRequireDefault(require(\"should\"));\n\nvar _helpers = require(\"../helpers\");\n\nvar _consts = require(\"../consts\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar foobar = {\n  foo: 'bar'\n};\ndescribe(\"Logger function should return \\n      1) correct types for \\n          a) string to log;\\n          b) colors;\\n      2) correct occurrency for css directives in string to log;\\n      3) proper different colors for string and variables\\n\", function () {\n  it(\"for \\\"LOG\\\" method\", function (done) {\n    var _logger = (0, _helpers.logger)(_consts.TYPE.LOG, ['Foobar ', ' bar'], [foobar]),\n        _logger2 = _slicedToArray(_logger, 2),\n        stringToLog = _logger2[0],\n        colors = _logger2[1];\n\n    var cssDirectiveOccurenceCount = stringToLog.match(/%c/g);\n    stringToLog.should.be.a.String();\n    cssDirectiveOccurenceCount.should.have.lengthOf(colors.length);\n    colors.should.be.a.Array().and.have.lengthOf(3);\n    colors[0].should.equal(_consts.COLORS.NOT_A_VARIABLE);\n    colors[1].should.equal(_consts.COLORS.LOG);\n    colors[2].should.equal(_consts.COLORS.NOT_A_VARIABLE);\n    done();\n  });\n  it(\"for \\\"Info\\\" method\", function (done) {\n    var _logger3 = (0, _helpers.logger)(_consts.TYPE.INFO, ['Foobar ', ' bar'], [foobar]),\n        _logger4 = _slicedToArray(_logger3, 2),\n        stringToLog = _logger4[0],\n        colors = _logger4[1];\n\n    var cssDirectiveOccurenceCount = stringToLog.match(/%c/g);\n    stringToLog.should.be.a.String();\n    cssDirectiveOccurenceCount.should.have.lengthOf(colors.length);\n    colors.should.be.a.Array().and.have.lengthOf(3);\n    colors[0].should.equal(_consts.COLORS.NOT_A_VARIABLE);\n    colors[1].should.equal(_consts.COLORS.INFO);\n    colors[2].should.equal(_consts.COLORS.NOT_A_VARIABLE);\n    done();\n  });\n  it(\"for \\\"Error\\\" method\", function (done) {\n    var _logger5 = (0, _helpers.logger)(_consts.TYPE.ERROR, ['Foobar ', ' bar'], [foobar]),\n        _logger6 = _slicedToArray(_logger5, 2),\n        stringToLog = _logger6[0],\n        colors = _logger6[1];\n\n    var cssDirectiveOccurenceCount = stringToLog.match(/%c/g);\n    stringToLog.should.be.a.String();\n    cssDirectiveOccurenceCount.should.have.lengthOf(colors.length);\n    colors.should.be.a.Array().and.have.lengthOf(3);\n    colors[0].should.equal(_consts.COLORS.NOT_A_VARIABLE);\n    colors[1].should.equal(_consts.COLORS.ERROR);\n    colors[2].should.equal(_consts.COLORS.NOT_A_VARIABLE);\n    done();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnNfdGVzdF8uanMiXSwibmFtZXMiOlsiZm9vYmFyIiwiZm9vIiwiZGVzY3JpYmUiLCJpdCIsImRvbmUiLCJUWVBFIiwiTE9HIiwic3RyaW5nVG9Mb2ciLCJjb2xvcnMiLCJjc3NEaXJlY3RpdmVPY2N1cmVuY2VDb3VudCIsIm1hdGNoIiwic2hvdWxkIiwiYmUiLCJhIiwiU3RyaW5nIiwiaGF2ZSIsImxlbmd0aE9mIiwibGVuZ3RoIiwiQXJyYXkiLCJhbmQiLCJlcXVhbCIsIkNPTE9SUyIsIk5PVF9BX1ZBUklBQkxFIiwiSU5GTyIsIkVSUk9SIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUc7QUFBRUMsRUFBQUEsR0FBRyxFQUFFO0FBQVAsQ0FBZjtBQUVBQyxRQUFRLGtQQU1MLFlBQU07QUFDUEMsRUFBQUEsRUFBRSx1QkFBcUIsVUFBQUMsSUFBSSxFQUFJO0FBQUEsa0JBQ0MscUJBQzVCQyxhQUFLQyxHQUR1QixFQUU1QixDQUFDLFNBQUQsRUFBWSxNQUFaLENBRjRCLEVBRzVCLENBQUNOLE1BQUQsQ0FINEIsQ0FERDtBQUFBO0FBQUEsUUFDdEJPLFdBRHNCO0FBQUEsUUFDVEMsTUFEUzs7QUFNN0IsUUFBTUMsMEJBQTBCLEdBQUdGLFdBQVcsQ0FBQ0csS0FBWixDQUFrQixLQUFsQixDQUFuQztBQUVBSCxJQUFBQSxXQUFXLENBQUNJLE1BQVosQ0FBbUJDLEVBQW5CLENBQXNCQyxDQUF0QixDQUF3QkMsTUFBeEI7QUFDQUwsSUFBQUEsMEJBQTBCLENBQUNFLE1BQTNCLENBQWtDSSxJQUFsQyxDQUF1Q0MsUUFBdkMsQ0FBZ0RSLE1BQU0sQ0FBQ1MsTUFBdkQ7QUFDQVQsSUFBQUEsTUFBTSxDQUFDRyxNQUFQLENBQWNDLEVBQWQsQ0FBaUJDLENBQWpCLENBQW1CSyxLQUFuQixHQUEyQkMsR0FBM0IsQ0FBK0JKLElBQS9CLENBQW9DQyxRQUFwQyxDQUE2QyxDQUE3QztBQUNBUixJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPQyxjQUE5QjtBQUNBZCxJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPZixHQUE5QjtBQUNBRSxJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPQyxjQUE5QjtBQUVBbEIsSUFBQUEsSUFBSTtBQUNMLEdBaEJDLENBQUY7QUFpQkFELEVBQUFBLEVBQUUsd0JBQXNCLFVBQUFDLElBQUksRUFBSTtBQUFBLG1CQUNBLHFCQUM1QkMsYUFBS2tCLElBRHVCLEVBRTVCLENBQUMsU0FBRCxFQUFZLE1BQVosQ0FGNEIsRUFHNUIsQ0FBQ3ZCLE1BQUQsQ0FINEIsQ0FEQTtBQUFBO0FBQUEsUUFDdkJPLFdBRHVCO0FBQUEsUUFDVkMsTUFEVTs7QUFNOUIsUUFBTUMsMEJBQTBCLEdBQUdGLFdBQVcsQ0FBQ0csS0FBWixDQUFrQixLQUFsQixDQUFuQztBQUVBSCxJQUFBQSxXQUFXLENBQUNJLE1BQVosQ0FBbUJDLEVBQW5CLENBQXNCQyxDQUF0QixDQUF3QkMsTUFBeEI7QUFDQUwsSUFBQUEsMEJBQTBCLENBQUNFLE1BQTNCLENBQWtDSSxJQUFsQyxDQUF1Q0MsUUFBdkMsQ0FBZ0RSLE1BQU0sQ0FBQ1MsTUFBdkQ7QUFDQVQsSUFBQUEsTUFBTSxDQUFDRyxNQUFQLENBQWNDLEVBQWQsQ0FBaUJDLENBQWpCLENBQW1CSyxLQUFuQixHQUEyQkMsR0FBM0IsQ0FBK0JKLElBQS9CLENBQW9DQyxRQUFwQyxDQUE2QyxDQUE3QztBQUNBUixJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPQyxjQUE5QjtBQUNBZCxJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPRSxJQUE5QjtBQUNBZixJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPQyxjQUE5QjtBQUVBbEIsSUFBQUEsSUFBSTtBQUNMLEdBaEJDLENBQUY7QUFpQkFELEVBQUFBLEVBQUUseUJBQXVCLFVBQUFDLElBQUksRUFBSTtBQUFBLG1CQUNELHFCQUM1QkMsYUFBS21CLEtBRHVCLEVBRTVCLENBQUMsU0FBRCxFQUFZLE1BQVosQ0FGNEIsRUFHNUIsQ0FBQ3hCLE1BQUQsQ0FINEIsQ0FEQztBQUFBO0FBQUEsUUFDeEJPLFdBRHdCO0FBQUEsUUFDWEMsTUFEVzs7QUFNL0IsUUFBTUMsMEJBQTBCLEdBQUdGLFdBQVcsQ0FBQ0csS0FBWixDQUFrQixLQUFsQixDQUFuQztBQUVBSCxJQUFBQSxXQUFXLENBQUNJLE1BQVosQ0FBbUJDLEVBQW5CLENBQXNCQyxDQUF0QixDQUF3QkMsTUFBeEI7QUFDQUwsSUFBQUEsMEJBQTBCLENBQUNFLE1BQTNCLENBQWtDSSxJQUFsQyxDQUF1Q0MsUUFBdkMsQ0FBZ0RSLE1BQU0sQ0FBQ1MsTUFBdkQ7QUFDQVQsSUFBQUEsTUFBTSxDQUFDRyxNQUFQLENBQWNDLEVBQWQsQ0FBaUJDLENBQWpCLENBQW1CSyxLQUFuQixHQUEyQkMsR0FBM0IsQ0FBK0JKLElBQS9CLENBQW9DQyxRQUFwQyxDQUE2QyxDQUE3QztBQUNBUixJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPQyxjQUE5QjtBQUNBZCxJQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVHLE1BQVYsQ0FBaUJTLEtBQWpCLENBQXVCQyxlQUFPRyxLQUE5QjtBQUNBaEIsSUFBQUEsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVRyxNQUFWLENBQWlCUyxLQUFqQixDQUF1QkMsZUFBT0MsY0FBOUI7QUFFQWxCLElBQUFBLElBQUk7QUFDTCxHQWhCQyxDQUFGO0FBaUJELENBMURPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Bhc3F1YWxlY29yZXR0aS9EZXNrdG9wL3Byb2plY3RzL2xvZ2dlci9zcmMvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzaG91bGQgZnJvbSAnc2hvdWxkJztcblxuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi4vaGVscGVycyc7XG5pbXBvcnQgeyBUWVBFLCBDT0xPUlMgfSBmcm9tICcuLi9jb25zdHMnO1xuXG5jb25zdCBmb29iYXIgPSB7IGZvbzogJ2JhcicgfTtcblxuZGVzY3JpYmUoYExvZ2dlciBmdW5jdGlvbiBzaG91bGQgcmV0dXJuIFxuICAgICAgMSkgY29ycmVjdCB0eXBlcyBmb3IgXG4gICAgICAgICAgYSkgc3RyaW5nIHRvIGxvZztcbiAgICAgICAgICBiKSBjb2xvcnM7XG4gICAgICAyKSBjb3JyZWN0IG9jY3VycmVuY3kgZm9yIGNzcyBkaXJlY3RpdmVzIGluIHN0cmluZyB0byBsb2c7XG4gICAgICAzKSBwcm9wZXIgZGlmZmVyZW50IGNvbG9ycyBmb3Igc3RyaW5nIGFuZCB2YXJpYWJsZXNcbmAsICgpID0+IHtcbiAgaXQoYGZvciBcIkxPR1wiIG1ldGhvZGAsIGRvbmUgPT4ge1xuICAgIGNvbnN0IFtzdHJpbmdUb0xvZywgY29sb3JzXSA9IGxvZ2dlcihcbiAgICAgIFRZUEUuTE9HLFxuICAgICAgWydGb29iYXIgJywgJyBiYXInXSxcbiAgICAgIFtmb29iYXJdLFxuICAgICk7XG4gICAgY29uc3QgY3NzRGlyZWN0aXZlT2NjdXJlbmNlQ291bnQgPSBzdHJpbmdUb0xvZy5tYXRjaCgvJWMvZyk7XG5cbiAgICBzdHJpbmdUb0xvZy5zaG91bGQuYmUuYS5TdHJpbmcoKTtcbiAgICBjc3NEaXJlY3RpdmVPY2N1cmVuY2VDb3VudC5zaG91bGQuaGF2ZS5sZW5ndGhPZihjb2xvcnMubGVuZ3RoKTtcbiAgICBjb2xvcnMuc2hvdWxkLmJlLmEuQXJyYXkoKS5hbmQuaGF2ZS5sZW5ndGhPZigzKTtcbiAgICBjb2xvcnNbMF0uc2hvdWxkLmVxdWFsKENPTE9SUy5OT1RfQV9WQVJJQUJMRSk7XG4gICAgY29sb3JzWzFdLnNob3VsZC5lcXVhbChDT0xPUlMuTE9HKTtcbiAgICBjb2xvcnNbMl0uc2hvdWxkLmVxdWFsKENPTE9SUy5OT1RfQV9WQVJJQUJMRSk7XG5cbiAgICBkb25lKCk7XG4gIH0pO1xuICBpdChgZm9yIFwiSW5mb1wiIG1ldGhvZGAsIGRvbmUgPT4ge1xuICAgIGNvbnN0IFtzdHJpbmdUb0xvZywgY29sb3JzXSA9IGxvZ2dlcihcbiAgICAgIFRZUEUuSU5GTyxcbiAgICAgIFsnRm9vYmFyICcsICcgYmFyJ10sXG4gICAgICBbZm9vYmFyXSxcbiAgICApO1xuICAgIGNvbnN0IGNzc0RpcmVjdGl2ZU9jY3VyZW5jZUNvdW50ID0gc3RyaW5nVG9Mb2cubWF0Y2goLyVjL2cpO1xuXG4gICAgc3RyaW5nVG9Mb2cuc2hvdWxkLmJlLmEuU3RyaW5nKCk7XG4gICAgY3NzRGlyZWN0aXZlT2NjdXJlbmNlQ291bnQuc2hvdWxkLmhhdmUubGVuZ3RoT2YoY29sb3JzLmxlbmd0aCk7XG4gICAgY29sb3JzLnNob3VsZC5iZS5hLkFycmF5KCkuYW5kLmhhdmUubGVuZ3RoT2YoMyk7XG4gICAgY29sb3JzWzBdLnNob3VsZC5lcXVhbChDT0xPUlMuTk9UX0FfVkFSSUFCTEUpO1xuICAgIGNvbG9yc1sxXS5zaG91bGQuZXF1YWwoQ09MT1JTLklORk8pO1xuICAgIGNvbG9yc1syXS5zaG91bGQuZXF1YWwoQ09MT1JTLk5PVF9BX1ZBUklBQkxFKTtcblxuICAgIGRvbmUoKTtcbiAgfSk7XG4gIGl0KGBmb3IgXCJFcnJvclwiIG1ldGhvZGAsIGRvbmUgPT4ge1xuICAgIGNvbnN0IFtzdHJpbmdUb0xvZywgY29sb3JzXSA9IGxvZ2dlcihcbiAgICAgIFRZUEUuRVJST1IsXG4gICAgICBbJ0Zvb2JhciAnLCAnIGJhciddLFxuICAgICAgW2Zvb2Jhcl0sXG4gICAgKTtcbiAgICBjb25zdCBjc3NEaXJlY3RpdmVPY2N1cmVuY2VDb3VudCA9IHN0cmluZ1RvTG9nLm1hdGNoKC8lYy9nKTtcblxuICAgIHN0cmluZ1RvTG9nLnNob3VsZC5iZS5hLlN0cmluZygpO1xuICAgIGNzc0RpcmVjdGl2ZU9jY3VyZW5jZUNvdW50LnNob3VsZC5oYXZlLmxlbmd0aE9mKGNvbG9ycy5sZW5ndGgpO1xuICAgIGNvbG9ycy5zaG91bGQuYmUuYS5BcnJheSgpLmFuZC5oYXZlLmxlbmd0aE9mKDMpO1xuICAgIGNvbG9yc1swXS5zaG91bGQuZXF1YWwoQ09MT1JTLk5PVF9BX1ZBUklBQkxFKTtcbiAgICBjb2xvcnNbMV0uc2hvdWxkLmVxdWFsKENPTE9SUy5FUlJPUik7XG4gICAgY29sb3JzWzJdLnNob3VsZC5lcXVhbChDT0xPUlMuTk9UX0FfVkFSSUFCTEUpO1xuXG4gICAgZG9uZSgpO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "helpers_test_.js"
      ],
      "names": [
        "foobar",
        "foo",
        "describe",
        "it",
        "done",
        "TYPE",
        "LOG",
        "stringToLog",
        "colors",
        "cssDirectiveOccurenceCount",
        "match",
        "should",
        "be",
        "a",
        "String",
        "have",
        "lengthOf",
        "length",
        "Array",
        "and",
        "equal",
        "COLORS",
        "NOT_A_VARIABLE",
        "INFO",
        "ERROR"
      ],
      "mappings": ";;AAAA;;AAEA;;AACA;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAf;AAEAC,QAAQ,kPAML,YAAM;AACPC,EAAAA,EAAE,uBAAqB,UAAAC,IAAI,EAAI;AAAA,kBACC,qBAC5BC,aAAKC,GADuB,EAE5B,CAAC,SAAD,EAAY,MAAZ,CAF4B,EAG5B,CAACN,MAAD,CAH4B,CADD;AAAA;AAAA,QACtBO,WADsB;AAAA,QACTC,MADS;;AAM7B,QAAMC,0BAA0B,GAAGF,WAAW,CAACG,KAAZ,CAAkB,KAAlB,CAAnC;AAEAH,IAAAA,WAAW,CAACI,MAAZ,CAAmBC,EAAnB,CAAsBC,CAAtB,CAAwBC,MAAxB;AACAL,IAAAA,0BAA0B,CAACE,MAA3B,CAAkCI,IAAlC,CAAuCC,QAAvC,CAAgDR,MAAM,CAACS,MAAvD;AACAT,IAAAA,MAAM,CAACG,MAAP,CAAcC,EAAd,CAAiBC,CAAjB,CAAmBK,KAAnB,GAA2BC,GAA3B,CAA+BJ,IAA/B,CAAoCC,QAApC,CAA6C,CAA7C;AACAR,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOC,cAA9B;AACAd,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOf,GAA9B;AACAE,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOC,cAA9B;AAEAlB,IAAAA,IAAI;AACL,GAhBC,CAAF;AAiBAD,EAAAA,EAAE,wBAAsB,UAAAC,IAAI,EAAI;AAAA,mBACA,qBAC5BC,aAAKkB,IADuB,EAE5B,CAAC,SAAD,EAAY,MAAZ,CAF4B,EAG5B,CAACvB,MAAD,CAH4B,CADA;AAAA;AAAA,QACvBO,WADuB;AAAA,QACVC,MADU;;AAM9B,QAAMC,0BAA0B,GAAGF,WAAW,CAACG,KAAZ,CAAkB,KAAlB,CAAnC;AAEAH,IAAAA,WAAW,CAACI,MAAZ,CAAmBC,EAAnB,CAAsBC,CAAtB,CAAwBC,MAAxB;AACAL,IAAAA,0BAA0B,CAACE,MAA3B,CAAkCI,IAAlC,CAAuCC,QAAvC,CAAgDR,MAAM,CAACS,MAAvD;AACAT,IAAAA,MAAM,CAACG,MAAP,CAAcC,EAAd,CAAiBC,CAAjB,CAAmBK,KAAnB,GAA2BC,GAA3B,CAA+BJ,IAA/B,CAAoCC,QAApC,CAA6C,CAA7C;AACAR,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOC,cAA9B;AACAd,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOE,IAA9B;AACAf,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOC,cAA9B;AAEAlB,IAAAA,IAAI;AACL,GAhBC,CAAF;AAiBAD,EAAAA,EAAE,yBAAuB,UAAAC,IAAI,EAAI;AAAA,mBACD,qBAC5BC,aAAKmB,KADuB,EAE5B,CAAC,SAAD,EAAY,MAAZ,CAF4B,EAG5B,CAACxB,MAAD,CAH4B,CADC;AAAA;AAAA,QACxBO,WADwB;AAAA,QACXC,MADW;;AAM/B,QAAMC,0BAA0B,GAAGF,WAAW,CAACG,KAAZ,CAAkB,KAAlB,CAAnC;AAEAH,IAAAA,WAAW,CAACI,MAAZ,CAAmBC,EAAnB,CAAsBC,CAAtB,CAAwBC,MAAxB;AACAL,IAAAA,0BAA0B,CAACE,MAA3B,CAAkCI,IAAlC,CAAuCC,QAAvC,CAAgDR,MAAM,CAACS,MAAvD;AACAT,IAAAA,MAAM,CAACG,MAAP,CAAcC,EAAd,CAAiBC,CAAjB,CAAmBK,KAAnB,GAA2BC,GAA3B,CAA+BJ,IAA/B,CAAoCC,QAApC,CAA6C,CAA7C;AACAR,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOC,cAA9B;AACAd,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOG,KAA9B;AACAhB,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAV,CAAiBS,KAAjB,CAAuBC,eAAOC,cAA9B;AAEAlB,IAAAA,IAAI;AACL,GAhBC,CAAF;AAiBD,CA1DO,CAAR",
      "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src/test",
      "sourcesContent": [
        "import should from 'should';\n\nimport { logger } from '../helpers';\nimport { TYPE, COLORS } from '../consts';\n\nconst foobar = { foo: 'bar' };\n\ndescribe(`Logger function should return \n      1) correct types for \n          a) string to log;\n          b) colors;\n      2) correct occurrency for css directives in string to log;\n      3) proper different colors for string and variables\n`, () => {\n  it(`for \"LOG\" method`, done => {\n    const [stringToLog, colors] = logger(\n      TYPE.LOG,\n      ['Foobar ', ' bar'],\n      [foobar],\n    );\n    const cssDirectiveOccurenceCount = stringToLog.match(/%c/g);\n\n    stringToLog.should.be.a.String();\n    cssDirectiveOccurenceCount.should.have.lengthOf(colors.length);\n    colors.should.be.a.Array().and.have.lengthOf(3);\n    colors[0].should.equal(COLORS.NOT_A_VARIABLE);\n    colors[1].should.equal(COLORS.LOG);\n    colors[2].should.equal(COLORS.NOT_A_VARIABLE);\n\n    done();\n  });\n  it(`for \"Info\" method`, done => {\n    const [stringToLog, colors] = logger(\n      TYPE.INFO,\n      ['Foobar ', ' bar'],\n      [foobar],\n    );\n    const cssDirectiveOccurenceCount = stringToLog.match(/%c/g);\n\n    stringToLog.should.be.a.String();\n    cssDirectiveOccurenceCount.should.have.lengthOf(colors.length);\n    colors.should.be.a.Array().and.have.lengthOf(3);\n    colors[0].should.equal(COLORS.NOT_A_VARIABLE);\n    colors[1].should.equal(COLORS.INFO);\n    colors[2].should.equal(COLORS.NOT_A_VARIABLE);\n\n    done();\n  });\n  it(`for \"Error\" method`, done => {\n    const [stringToLog, colors] = logger(\n      TYPE.ERROR,\n      ['Foobar ', ' bar'],\n      [foobar],\n    );\n    const cssDirectiveOccurenceCount = stringToLog.match(/%c/g);\n\n    stringToLog.should.be.a.String();\n    cssDirectiveOccurenceCount.should.have.lengthOf(colors.length);\n    colors.should.be.a.Array().and.have.lengthOf(3);\n    colors[0].should.equal(COLORS.NOT_A_VARIABLE);\n    colors[1].should.equal(COLORS.ERROR);\n    colors[2].should.equal(COLORS.NOT_A_VARIABLE);\n\n    done();\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561200443142
  },
  "{\"sourceRoot\":\"/Users/pasqualecoretti/Desktop/projects/logger/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/pasqualecoretti/Desktop/projects/logger\",\"filename\":\"/Users/pasqualecoretti/Desktop/projects/logger/src/helpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pasqualecoretti/Desktop/projects/logger\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/pasqualecoretti/Desktop/projects/logger",
      "filename": "/Users/pasqualecoretti/Desktop/projects/logger/src/helpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/pasqualecoretti/Desktop/projects/logger",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/pasqualecoretti/Desktop/projects/logger/src/helpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/pasqualecoretti/Desktop/projects/logger/src/helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortLogRequest = sortLogRequest;\nexports.logger = logger;\n\nvar _consts = require(\"./consts\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction sortLogRequest(type, strings) {\n  if (Array.isArray(strings)) {\n    var _console;\n\n    for (var _len = arguments.length, values = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      values[_key - 2] = arguments[_key];\n    }\n\n    var _logger = logger.apply(void 0, [type, strings].concat(values)),\n        _logger2 = _slicedToArray(_logger, 2),\n        str = _logger2[0],\n        colors = _logger2[1];\n\n    (_console = console).log.apply(_console, [str].concat(_toConsumableArray(colors)));\n\n    return;\n  }\n\n  console.log(strings);\n}\n\nfunction logger(logType, strings) {\n  var getColorFromType = function getColorFromType(type) {\n    switch (type) {\n      case _consts.TYPE.ERROR:\n        return _consts.COLORS.ERROR;\n\n      case _consts.TYPE.INFO:\n        return _consts.COLORS.INFO;\n\n      case _consts.TYPE.LOG:\n        return _consts.COLORS.LOG;\n\n      default:\n        return _consts.COLORS.LOG;\n    }\n  };\n\n  var addCssDirectiveTo = function addCssDirectiveTo(value) {\n    return '%c' + value;\n  };\n\n  var str = '';\n  var color = getColorFromType(logType);\n  var colors = [];\n\n  for (var _len2 = arguments.length, values = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    values[_key2 - 2] = arguments[_key2];\n  }\n\n  for (var i = 0; i < strings.length; i++) {\n    if (i > 0) {\n      if (values[i - 1] && _typeof(values[i - 1]) === 'object') {\n        if (values[i - 1] instanceof Error) {\n          if (values[i - 1].stack) {\n            continue;\n          }\n        } else {\n          try {\n            str += addCssDirectiveTo(JSON.stringify(values[i - 1]));\n            colors.push(color);\n            str += addCssDirectiveTo(strings[i]);\n            colors.push(_consts.COLORS.NOT_A_VARIABLE);\n            continue; // eslint-disable-next-line no-empty\n          } catch (err) {//TODO: catch\n          }\n        }\n      }\n\n      str += addCssDirectiveTo(values[i - 1]);\n      colors.push(color);\n    }\n\n    str += addCssDirectiveTo(strings[i]);\n    colors.push(_consts.COLORS.NOT_A_VARIABLE);\n  }\n\n  return [str, colors];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsic29ydExvZ1JlcXVlc3QiLCJ0eXBlIiwic3RyaW5ncyIsIkFycmF5IiwiaXNBcnJheSIsInZhbHVlcyIsImxvZ2dlciIsInN0ciIsImNvbG9ycyIsImNvbnNvbGUiLCJsb2ciLCJsb2dUeXBlIiwiZ2V0Q29sb3JGcm9tVHlwZSIsIlRZUEUiLCJFUlJPUiIsIkNPTE9SUyIsIklORk8iLCJMT0ciLCJhZGRDc3NEaXJlY3RpdmVUbyIsInZhbHVlIiwiY29sb3IiLCJpIiwibGVuZ3RoIiwiRXJyb3IiLCJzdGFjayIsIkpTT04iLCJzdHJpbmdpZnkiLCJwdXNoIiwiTk9UX0FfVkFSSUFCTEUiLCJlcnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRU8sU0FBU0EsY0FBVCxDQUF3QkMsSUFBeEIsRUFBOEJDLE9BQTlCLEVBQWtEO0FBQ3ZELE1BQUlDLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixPQUFkLENBQUosRUFBNEI7QUFBQTs7QUFBQSxzQ0FEbUJHLE1BQ25CO0FBRG1CQSxNQUFBQSxNQUNuQjtBQUFBOztBQUFBLGtCQUNKQyxNQUFNLE1BQU4sVUFBT0wsSUFBUCxFQUFhQyxPQUFiLFNBQXlCRyxNQUF6QixFQURJO0FBQUE7QUFBQSxRQUNuQkUsR0FEbUI7QUFBQSxRQUNkQyxNQURjOztBQUUxQixnQkFBQUMsT0FBTyxFQUFDQyxHQUFSLGtCQUFZSCxHQUFaLDRCQUFvQkMsTUFBcEI7O0FBQ0E7QUFDRDs7QUFFREMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlSLE9BQVo7QUFDRDs7QUFFTSxTQUFTSSxNQUFULENBQWdCSyxPQUFoQixFQUF5QlQsT0FBekIsRUFBNkM7QUFDbEQsTUFBTVUsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFBWCxJQUFJLEVBQUk7QUFDL0IsWUFBUUEsSUFBUjtBQUNFLFdBQUtZLGFBQUtDLEtBQVY7QUFDRSxlQUFPQyxlQUFPRCxLQUFkOztBQUNGLFdBQUtELGFBQUtHLElBQVY7QUFDRSxlQUFPRCxlQUFPQyxJQUFkOztBQUNGLFdBQUtILGFBQUtJLEdBQVY7QUFDRSxlQUFPRixlQUFPRSxHQUFkOztBQUNGO0FBQ0UsZUFBT0YsZUFBT0UsR0FBZDtBQVJKO0FBVUQsR0FYRDs7QUFhQSxNQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUFDLEtBQUs7QUFBQSxXQUFJLE9BQU9BLEtBQVg7QUFBQSxHQUEvQjs7QUFFQSxNQUFJWixHQUFHLEdBQUcsRUFBVjtBQUNBLE1BQUlhLEtBQUssR0FBR1IsZ0JBQWdCLENBQUNELE9BQUQsQ0FBNUI7QUFDQSxNQUFJSCxNQUFNLEdBQUcsRUFBYjs7QUFsQmtELHFDQUFSSCxNQUFRO0FBQVJBLElBQUFBLE1BQVE7QUFBQTs7QUFvQmxELE9BQUssSUFBSWdCLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUduQixPQUFPLENBQUNvQixNQUE1QixFQUFvQ0QsQ0FBQyxFQUFyQyxFQUF5QztBQUN2QyxRQUFJQSxDQUFDLEdBQUcsQ0FBUixFQUFXO0FBQ1QsVUFBSWhCLE1BQU0sQ0FBQ2dCLENBQUMsR0FBRyxDQUFMLENBQU4sSUFBaUIsUUFBT2hCLE1BQU0sQ0FBQ2dCLENBQUMsR0FBRyxDQUFMLENBQWIsTUFBeUIsUUFBOUMsRUFBd0Q7QUFDdEQsWUFBSWhCLE1BQU0sQ0FBQ2dCLENBQUMsR0FBRyxDQUFMLENBQU4sWUFBeUJFLEtBQTdCLEVBQW9DO0FBQ2xDLGNBQUlsQixNQUFNLENBQUNnQixDQUFDLEdBQUcsQ0FBTCxDQUFOLENBQWNHLEtBQWxCLEVBQXlCO0FBQ3ZCO0FBQ0Q7QUFDRixTQUpELE1BSU87QUFDTCxjQUFJO0FBQ0ZqQixZQUFBQSxHQUFHLElBQUlXLGlCQUFpQixDQUFDTyxJQUFJLENBQUNDLFNBQUwsQ0FBZXJCLE1BQU0sQ0FBQ2dCLENBQUMsR0FBRyxDQUFMLENBQXJCLENBQUQsQ0FBeEI7QUFDQWIsWUFBQUEsTUFBTSxDQUFDbUIsSUFBUCxDQUFZUCxLQUFaO0FBQ0FiLFlBQUFBLEdBQUcsSUFBSVcsaUJBQWlCLENBQUNoQixPQUFPLENBQUNtQixDQUFELENBQVIsQ0FBeEI7QUFDQWIsWUFBQUEsTUFBTSxDQUFDbUIsSUFBUCxDQUFZWixlQUFPYSxjQUFuQjtBQUNBLHFCQUxFLENBTUY7QUFDRCxXQVBELENBT0UsT0FBT0MsR0FBUCxFQUFZLENBQ1o7QUFDRDtBQUNGO0FBQ0Y7O0FBQ0R0QixNQUFBQSxHQUFHLElBQUlXLGlCQUFpQixDQUFDYixNQUFNLENBQUNnQixDQUFDLEdBQUcsQ0FBTCxDQUFQLENBQXhCO0FBQ0FiLE1BQUFBLE1BQU0sQ0FBQ21CLElBQVAsQ0FBWVAsS0FBWjtBQUNEOztBQUNEYixJQUFBQSxHQUFHLElBQUlXLGlCQUFpQixDQUFDaEIsT0FBTyxDQUFDbUIsQ0FBRCxDQUFSLENBQXhCO0FBQ0FiLElBQUFBLE1BQU0sQ0FBQ21CLElBQVAsQ0FBWVosZUFBT2EsY0FBbkI7QUFDRDs7QUFFRCxTQUFPLENBQUNyQixHQUFELEVBQU1DLE1BQU4sQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYXNxdWFsZWNvcmV0dGkvRGVza3RvcC9wcm9qZWN0cy9sb2dnZXIvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVFlQRSwgQ09MT1JTIH0gZnJvbSAnLi9jb25zdHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc29ydExvZ1JlcXVlc3QodHlwZSwgc3RyaW5ncywgLi4udmFsdWVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHN0cmluZ3MpKSB7XG4gICAgY29uc3QgW3N0ciwgY29sb3JzXSA9IGxvZ2dlcih0eXBlLCBzdHJpbmdzLCAuLi52YWx1ZXMpO1xuICAgIGNvbnNvbGUubG9nKHN0ciwgLi4uY29sb3JzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zb2xlLmxvZyhzdHJpbmdzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvZ2dlcihsb2dUeXBlLCBzdHJpbmdzLCAuLi52YWx1ZXMpIHtcbiAgY29uc3QgZ2V0Q29sb3JGcm9tVHlwZSA9IHR5cGUgPT4ge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSBUWVBFLkVSUk9SOlxuICAgICAgICByZXR1cm4gQ09MT1JTLkVSUk9SO1xuICAgICAgY2FzZSBUWVBFLklORk86XG4gICAgICAgIHJldHVybiBDT0xPUlMuSU5GTztcbiAgICAgIGNhc2UgVFlQRS5MT0c6XG4gICAgICAgIHJldHVybiBDT0xPUlMuTE9HO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIENPTE9SUy5MT0c7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGFkZENzc0RpcmVjdGl2ZVRvID0gdmFsdWUgPT4gJyVjJyArIHZhbHVlO1xuXG4gIGxldCBzdHIgPSAnJztcbiAgbGV0IGNvbG9yID0gZ2V0Q29sb3JGcm9tVHlwZShsb2dUeXBlKTtcbiAgbGV0IGNvbG9ycyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyaW5ncy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChpID4gMCkge1xuICAgICAgaWYgKHZhbHVlc1tpIC0gMV0gJiYgdHlwZW9mIHZhbHVlc1tpIC0gMV0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmICh2YWx1ZXNbaSAtIDFdIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICBpZiAodmFsdWVzW2kgLSAxXS5zdGFjaykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBzdHIgKz0gYWRkQ3NzRGlyZWN0aXZlVG8oSlNPTi5zdHJpbmdpZnkodmFsdWVzW2kgLSAxXSkpO1xuICAgICAgICAgICAgY29sb3JzLnB1c2goY29sb3IpO1xuICAgICAgICAgICAgc3RyICs9IGFkZENzc0RpcmVjdGl2ZVRvKHN0cmluZ3NbaV0pO1xuICAgICAgICAgICAgY29sb3JzLnB1c2goQ09MT1JTLk5PVF9BX1ZBUklBQkxFKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAvL1RPRE86IGNhdGNoXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBzdHIgKz0gYWRkQ3NzRGlyZWN0aXZlVG8odmFsdWVzW2kgLSAxXSk7XG4gICAgICBjb2xvcnMucHVzaChjb2xvcik7XG4gICAgfVxuICAgIHN0ciArPSBhZGRDc3NEaXJlY3RpdmVUbyhzdHJpbmdzW2ldKTtcbiAgICBjb2xvcnMucHVzaChDT0xPUlMuTk9UX0FfVkFSSUFCTEUpO1xuICB9XG5cbiAgcmV0dXJuIFtzdHIsIGNvbG9yc107XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "sortLogRequest",
        "type",
        "strings",
        "Array",
        "isArray",
        "values",
        "logger",
        "str",
        "colors",
        "console",
        "log",
        "logType",
        "getColorFromType",
        "TYPE",
        "ERROR",
        "COLORS",
        "INFO",
        "LOG",
        "addCssDirectiveTo",
        "value",
        "color",
        "i",
        "length",
        "Error",
        "stack",
        "JSON",
        "stringify",
        "push",
        "NOT_A_VARIABLE",
        "err"
      ],
      "mappings": ";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,OAA9B,EAAkD;AACvD,MAAIC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;AAAA;;AAAA,sCADmBG,MACnB;AADmBA,MAAAA,MACnB;AAAA;;AAAA,kBACJC,MAAM,MAAN,UAAOL,IAAP,EAAaC,OAAb,SAAyBG,MAAzB,EADI;AAAA;AAAA,QACnBE,GADmB;AAAA,QACdC,MADc;;AAE1B,gBAAAC,OAAO,EAACC,GAAR,kBAAYH,GAAZ,4BAAoBC,MAApB;;AACA;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD;;AAEM,SAASI,MAAT,CAAgBK,OAAhB,EAAyBT,OAAzB,EAA6C;AAClD,MAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAX,IAAI,EAAI;AAC/B,YAAQA,IAAR;AACE,WAAKY,aAAKC,KAAV;AACE,eAAOC,eAAOD,KAAd;;AACF,WAAKD,aAAKG,IAAV;AACE,eAAOD,eAAOC,IAAd;;AACF,WAAKH,aAAKI,GAAV;AACE,eAAOF,eAAOE,GAAd;;AACF;AACE,eAAOF,eAAOE,GAAd;AARJ;AAUD,GAXD;;AAaA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,WAAI,OAAOA,KAAX;AAAA,GAA/B;;AAEA,MAAIZ,GAAG,GAAG,EAAV;AACA,MAAIa,KAAK,GAAGR,gBAAgB,CAACD,OAAD,CAA5B;AACA,MAAIH,MAAM,GAAG,EAAb;;AAlBkD,qCAARH,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AAoBlD,OAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,OAAO,CAACoB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIA,CAAC,GAAG,CAAR,EAAW;AACT,UAAIhB,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAN,IAAiB,QAAOhB,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAb,MAAyB,QAA9C,EAAwD;AACtD,YAAIhB,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAN,YAAyBE,KAA7B,EAAoC;AAClC,cAAIlB,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAN,CAAcG,KAAlB,EAAyB;AACvB;AACD;AACF,SAJD,MAIO;AACL,cAAI;AACFjB,YAAAA,GAAG,IAAIW,iBAAiB,CAACO,IAAI,CAACC,SAAL,CAAerB,MAAM,CAACgB,CAAC,GAAG,CAAL,CAArB,CAAD,CAAxB;AACAb,YAAAA,MAAM,CAACmB,IAAP,CAAYP,KAAZ;AACAb,YAAAA,GAAG,IAAIW,iBAAiB,CAAChB,OAAO,CAACmB,CAAD,CAAR,CAAxB;AACAb,YAAAA,MAAM,CAACmB,IAAP,CAAYZ,eAAOa,cAAnB;AACA,qBALE,CAMF;AACD,WAPD,CAOE,OAAOC,GAAP,EAAY,CACZ;AACD;AACF;AACF;;AACDtB,MAAAA,GAAG,IAAIW,iBAAiB,CAACb,MAAM,CAACgB,CAAC,GAAG,CAAL,CAAP,CAAxB;AACAb,MAAAA,MAAM,CAACmB,IAAP,CAAYP,KAAZ;AACD;;AACDb,IAAAA,GAAG,IAAIW,iBAAiB,CAAChB,OAAO,CAACmB,CAAD,CAAR,CAAxB;AACAb,IAAAA,MAAM,CAACmB,IAAP,CAAYZ,eAAOa,cAAnB;AACD;;AAED,SAAO,CAACrB,GAAD,EAAMC,MAAN,CAAP;AACD",
      "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src",
      "sourcesContent": [
        "import { TYPE, COLORS } from './consts';\n\nexport function sortLogRequest(type, strings, ...values) {\n  if (Array.isArray(strings)) {\n    const [str, colors] = logger(type, strings, ...values);\n    console.log(str, ...colors);\n    return;\n  }\n\n  console.log(strings);\n}\n\nexport function logger(logType, strings, ...values) {\n  const getColorFromType = type => {\n    switch (type) {\n      case TYPE.ERROR:\n        return COLORS.ERROR;\n      case TYPE.INFO:\n        return COLORS.INFO;\n      case TYPE.LOG:\n        return COLORS.LOG;\n      default:\n        return COLORS.LOG;\n    }\n  };\n\n  const addCssDirectiveTo = value => '%c' + value;\n\n  let str = '';\n  let color = getColorFromType(logType);\n  let colors = [];\n\n  for (let i = 0; i < strings.length; i++) {\n    if (i > 0) {\n      if (values[i - 1] && typeof values[i - 1] === 'object') {\n        if (values[i - 1] instanceof Error) {\n          if (values[i - 1].stack) {\n            continue;\n          }\n        } else {\n          try {\n            str += addCssDirectiveTo(JSON.stringify(values[i - 1]));\n            colors.push(color);\n            str += addCssDirectiveTo(strings[i]);\n            colors.push(COLORS.NOT_A_VARIABLE);\n            continue;\n            // eslint-disable-next-line no-empty\n          } catch (err) {\n            //TODO: catch\n          }\n        }\n      }\n      str += addCssDirectiveTo(values[i - 1]);\n      colors.push(color);\n    }\n    str += addCssDirectiveTo(strings[i]);\n    colors.push(COLORS.NOT_A_VARIABLE);\n  }\n\n  return [str, colors];\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561200443140
  },
  "{\"sourceRoot\":\"/Users/pasqualecoretti/Desktop/projects/logger/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/pasqualecoretti/Desktop/projects/logger\",\"filename\":\"/Users/pasqualecoretti/Desktop/projects/logger/src/consts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pasqualecoretti/Desktop/projects/logger\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/pasqualecoretti/Desktop/projects/logger",
      "filename": "/Users/pasqualecoretti/Desktop/projects/logger/src/consts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/pasqualecoretti/Desktop/projects/logger",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/pasqualecoretti/Desktop/projects/logger/src/consts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/pasqualecoretti/Desktop/projects/logger/src/consts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src",
        "sourceFileName": "consts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.COLORS = exports.TYPE = void 0;\nvar TYPE = {\n  ERROR: 0,\n  LOG: 1,\n  INFO: 2\n};\nexports.TYPE = TYPE;\nvar COLORS = {\n  WARNING: 'color: red;',\n  ERROR: 'color: red;',\n  INFO: 'color: gray;',\n  LOG: 'color: green;',\n  NOT_A_VARIABLE: 'color: black;'\n};\nexports.COLORS = COLORS;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0cy5qcyJdLCJuYW1lcyI6WyJUWVBFIiwiRVJST1IiLCJMT0ciLCJJTkZPIiwiQ09MT1JTIiwiV0FSTklORyIsIk5PVF9BX1ZBUklBQkxFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxJQUFJLEdBQUc7QUFDbEJDLEVBQUFBLEtBQUssRUFBRSxDQURXO0FBRWxCQyxFQUFBQSxHQUFHLEVBQUUsQ0FGYTtBQUdsQkMsRUFBQUEsSUFBSSxFQUFFO0FBSFksQ0FBYjs7QUFNQSxJQUFNQyxNQUFNLEdBQUc7QUFDcEJDLEVBQUFBLE9BQU8sRUFBRSxhQURXO0FBRXBCSixFQUFBQSxLQUFLLEVBQUUsYUFGYTtBQUdwQkUsRUFBQUEsSUFBSSxFQUFFLGNBSGM7QUFJcEJELEVBQUFBLEdBQUcsRUFBRSxlQUplO0FBTXBCSSxFQUFBQSxjQUFjLEVBQUU7QUFOSSxDQUFmIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYXNxdWFsZWNvcmV0dGkvRGVza3RvcC9wcm9qZWN0cy9sb2dnZXIvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFRZUEUgPSB7XG4gIEVSUk9SOiAwLFxuICBMT0c6IDEsXG4gIElORk86IDIsXG59O1xuXG5leHBvcnQgY29uc3QgQ09MT1JTID0ge1xuICBXQVJOSU5HOiAnY29sb3I6IHJlZDsnLFxuICBFUlJPUjogJ2NvbG9yOiByZWQ7JyxcbiAgSU5GTzogJ2NvbG9yOiBncmF5OycsXG4gIExPRzogJ2NvbG9yOiBncmVlbjsnLFxuXG4gIE5PVF9BX1ZBUklBQkxFOiAnY29sb3I6IGJsYWNrOycsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "consts.js"
      ],
      "names": [
        "TYPE",
        "ERROR",
        "LOG",
        "INFO",
        "COLORS",
        "WARNING",
        "NOT_A_VARIABLE"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,IAAI,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,GAAG,EAAE,CAFa;AAGlBC,EAAAA,IAAI,EAAE;AAHY,CAAb;;AAMA,IAAMC,MAAM,GAAG;AACpBC,EAAAA,OAAO,EAAE,aADW;AAEpBJ,EAAAA,KAAK,EAAE,aAFa;AAGpBE,EAAAA,IAAI,EAAE,cAHc;AAIpBD,EAAAA,GAAG,EAAE,eAJe;AAMpBI,EAAAA,cAAc,EAAE;AANI,CAAf",
      "sourceRoot": "/Users/pasqualecoretti/Desktop/projects/logger/src",
      "sourcesContent": [
        "export const TYPE = {\n  ERROR: 0,\n  LOG: 1,\n  INFO: 2,\n};\n\nexport const COLORS = {\n  WARNING: 'color: red;',\n  ERROR: 'color: red;',\n  INFO: 'color: gray;',\n  LOG: 'color: green;',\n\n  NOT_A_VARIABLE: 'color: black;',\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561200443139
  }
}